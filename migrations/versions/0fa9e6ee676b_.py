"""empty message

Revision ID: 0fa9e6ee676b
Revises: 
Create Date: 2021-02-12 13:48:20.129100

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0fa9e6ee676b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('station',
    sa.Column('station_id', sa.String(length=4), nullable=False),
    sa.Column('wmo_id', sa.String(length=4), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('elevation_m', sa.Float(), nullable=True),
    sa.Column('site', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('metar', sa.Boolean(), nullable=True),
    sa.Column('rawinsonde', sa.Boolean(), nullable=True),
    sa.Column('taf', sa.Boolean(), nullable=True),
    sa.Column('nexrad', sa.Boolean(), nullable=True),
    sa.Column('wind_profiler', sa.Boolean(), nullable=True),
    sa.Column('wfo_office', sa.Boolean(), nullable=True),
    sa.Column('synops', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('station_id')
    )
    op.create_index(op.f('ix_station_country'), 'station', ['country'], unique=False)
    op.create_index(op.f('ix_station_site'), 'station', ['site'], unique=False)
    op.create_index(op.f('ix_station_state'), 'station', ['state'], unique=False)
    op.create_index(op.f('ix_station_wmo_id'), 'station', ['wmo_id'], unique=False)
    op.create_table('taf',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('station_id', sa.String(length=4), nullable=True),
    sa.Column('issue_time', sa.DateTime(), nullable=True),
    sa.Column('bulletin_time', sa.DateTime(), nullable=True),
    sa.Column('valid_time_from', sa.DateTime(), nullable=True),
    sa.Column('valid_time_to', sa.DateTime(), nullable=True),
    sa.Column('remarks', sa.String(length=500), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('elevation_m', sa.Float(), nullable=True),
    sa.Column('fcst_time_from', sa.DateTime(), nullable=True),
    sa.Column('fcst_time_to', sa.DateTime(), nullable=True),
    sa.Column('change_indicator', sa.String(length=5), nullable=True),
    sa.Column('time_becoming', sa.DateTime(), nullable=True),
    sa.Column('probability', sa.Integer(), nullable=True),
    sa.Column('wind_dir_degrees', sa.Integer(), nullable=True),
    sa.Column('wind_speed_kt', sa.Integer(), nullable=True),
    sa.Column('wind_gust_kt', sa.Integer(), nullable=True),
    sa.Column('wind_shear_hgt_ft_agl', sa.Integer(), nullable=True),
    sa.Column('wind_shear_dir_degrees', sa.Integer(), nullable=True),
    sa.Column('wind_shear_speed_kt', sa.Integer(), nullable=True),
    sa.Column('visibility_statute_mi', sa.Float(), nullable=True),
    sa.Column('altim_in_hg', sa.Float(), nullable=True),
    sa.Column('vert_vis_ft', sa.Float(), nullable=True),
    sa.Column('wx_string', sa.String(length=500), nullable=True),
    sa.Column('not_decoded', sa.String(length=500), nullable=True),
    sa.Column('sky_cover', sa.String(length=3), nullable=True),
    sa.Column('cloud_base_ft_agl', sa.Integer(), nullable=True),
    sa.Column('cloud_type', sa.String(length=3), nullable=True),
    sa.Column('turbulence_intensity', sa.Integer(), nullable=True),
    sa.Column('turbulence_min_alt_ft_agl', sa.Integer(), nullable=True),
    sa.Column('turbulence_max_alt_ft_agl', sa.Integer(), nullable=True),
    sa.Column('icing_intensity', sa.Integer(), nullable=True),
    sa.Column('icing_min_alt_ft_agl', sa.Integer(), nullable=True),
    sa.Column('icing_max_alt_ft_agl', sa.Integer(), nullable=True),
    sa.Column('valid_time', sa.DateTime(), nullable=True),
    sa.Column('sfc_temp_c', sa.Float(), nullable=True),
    sa.Column('max_temp_c', sa.Float(), nullable=True),
    sa.Column('min_temp_c', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_taf_bulletin_time'), 'taf', ['bulletin_time'], unique=False)
    op.create_index(op.f('ix_taf_cloud_type'), 'taf', ['cloud_type'], unique=False)
    op.create_index(op.f('ix_taf_elevation_m'), 'taf', ['elevation_m'], unique=False)
    op.create_index(op.f('ix_taf_fcst_time_from'), 'taf', ['fcst_time_from'], unique=False)
    op.create_index(op.f('ix_taf_fcst_time_to'), 'taf', ['fcst_time_to'], unique=False)
    op.create_index(op.f('ix_taf_issue_time'), 'taf', ['issue_time'], unique=False)
    op.create_index(op.f('ix_taf_latitude'), 'taf', ['latitude'], unique=False)
    op.create_index(op.f('ix_taf_longitude'), 'taf', ['longitude'], unique=False)
    op.create_index(op.f('ix_taf_probability'), 'taf', ['probability'], unique=False)
    op.create_index(op.f('ix_taf_sky_cover'), 'taf', ['sky_cover'], unique=False)
    op.create_index(op.f('ix_taf_station_id'), 'taf', ['station_id'], unique=False)
    op.create_index(op.f('ix_taf_time_becoming'), 'taf', ['time_becoming'], unique=False)
    op.create_index(op.f('ix_taf_valid_time_from'), 'taf', ['valid_time_from'], unique=False)
    op.create_index(op.f('ix_taf_valid_time_to'), 'taf', ['valid_time_to'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=12), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_first_name'), 'user', ['first_name'], unique=True)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=True)
    op.create_index(op.f('ix_user_phone'), 'user', ['phone'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('follow',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=4), nullable=True),
    sa.Column('text_alert', sa.Boolean(), nullable=True),
    sa.Column('email_alert', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('follow')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_phone'), table_name='user')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_index(op.f('ix_user_first_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_taf_valid_time_to'), table_name='taf')
    op.drop_index(op.f('ix_taf_valid_time_from'), table_name='taf')
    op.drop_index(op.f('ix_taf_time_becoming'), table_name='taf')
    op.drop_index(op.f('ix_taf_station_id'), table_name='taf')
    op.drop_index(op.f('ix_taf_sky_cover'), table_name='taf')
    op.drop_index(op.f('ix_taf_probability'), table_name='taf')
    op.drop_index(op.f('ix_taf_longitude'), table_name='taf')
    op.drop_index(op.f('ix_taf_latitude'), table_name='taf')
    op.drop_index(op.f('ix_taf_issue_time'), table_name='taf')
    op.drop_index(op.f('ix_taf_fcst_time_to'), table_name='taf')
    op.drop_index(op.f('ix_taf_fcst_time_from'), table_name='taf')
    op.drop_index(op.f('ix_taf_elevation_m'), table_name='taf')
    op.drop_index(op.f('ix_taf_cloud_type'), table_name='taf')
    op.drop_index(op.f('ix_taf_bulletin_time'), table_name='taf')
    op.drop_table('taf')
    op.drop_index(op.f('ix_station_wmo_id'), table_name='station')
    op.drop_index(op.f('ix_station_state'), table_name='station')
    op.drop_index(op.f('ix_station_site'), table_name='station')
    op.drop_index(op.f('ix_station_country'), table_name='station')
    op.drop_table('station')
    # ### end Alembic commands ###
